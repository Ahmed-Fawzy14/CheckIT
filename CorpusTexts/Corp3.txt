In computer science data structures are used to store, organize, and manipulate data efficiently, and science data differs greatly so do data structures. For the experimental study, we will be considering the Hash Table and Graph data structures. Hash tables provide a dynamic method of inserting, delting, and manipulating data through providing each element with a hash value or a key. This key can significantly improve searching algorithm performance since a hash value is a unique identifier for each element in the hash table, disregarding collisions. Therefore, when searching for a particular element, the hash table can use the key to quickly locate the element without having to search through the entire data structure. On the other hand, graphs provide a method of inserting, delting, and manipulating data through nodes that have relationships with each other forming edges. Graphs are used to model complex relationships such as networks or can be mutated into trees which can provide their own benefits. In this paper, we present a comparison between hash tables and graphs; moreover, we compare between the time complexity and implementation methods of hash tables versus graphs in three searching algorithms: breadth-first search, hash table lookup, and brute force search.
